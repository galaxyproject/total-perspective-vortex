global:
  default_inherits: default

tools:
  default:
    cores: 2
    mem: cores * 3
    env:
      TEST_JOB_SLOTS: "{cores}"
    params:
      native_spec: "--mem {mem} --cores {cores}"
    scheduling:
      require: []
      prefer:
        - general
      accept:
      reject:
        - pulsar
    rules:
      - if: input_size < 5
        fail: We don't run piddling datasets
  bwa:
    scheduling:
      require:
        - pulsar
    rules:
      - if: input_size <= 10
        cores: 4
        mem: cores * 4
        execute: |
          from galaxy.jobs.mapper import JobNotReadyException
          raise JobNotReadyException()
      - if: input_size > 10 and input_size < 20
        execute: |
          entity.params['my_brand_new_param'] = 'hello_world'
          entity.cores = 8
        scheduling:
          require:
            - highmem
      - if: input_size >= 20
        fail: Too much data, shouldn't run

destinations:
  local:
    dest_max_cores: 4
    dest_max_mem: 16
    scheduling:
      prefer:
        - general
  k8s_environment:
    dest_max_cores: 16
    dest_max_mem: 64
    dest_max_gpus: 2
    scheduling:
      prefer:
        - pulsar
