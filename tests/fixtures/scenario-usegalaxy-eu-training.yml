global:
  default_inherits: default

tools:
  default:
    cores: 2
    mem: cores * 3.8
    env: {}
    gpus: 0
    params:
      tmp_dir: true
      request_cpus: '{cores}'
      request_memory: '{mem}G'
      submit_request_gpus: '{gpus}'
      docker_memory: '{mem}G'
    scheduling:
      reject:
        - offline
    rules:
      - if: "True"
        execute: |
          training_roles = [r.name for r in user.all_roles() if not r.deleted and "training" in r.name]
          training_expr = " || ".join(['(GalaxyGroup == "%s")' % role for role in training_roles])
          training_labels = '"' + ", ".join(['%s' % role for role in training_roles]) + '"'
          entity.params['requirements'] = '(GalaxyGroup == "compute") || (%s)' % training_expr
          entity.params['+Group'] = training_labels
    rank: |
      final_destinations = helpers.weighted_random_sampling(candidate_destinations)
      final_destinations

destinations:
  k8s_environment:
    dest_max_cores: 16
    dest_max_mem: 64
    dest_max_gpus: 2
    scheduling:
      prefer:
        - pulsar
